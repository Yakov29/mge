{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,MAAM,gBAAgB,SAAS,aAAa,CAAC;IAC7C,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,MAAM,qBAAqB,SAAS,aAAa,CAAC;IAClD,MAAM,0BAA0B,SAAS,aAAa,CAAC;IACvD,MAAM,gCAAgC,SAAS,aAAa,CAAC;IAC7D,MAAM,sBAAsB,SAAS,aAAa,CAAC;IACnD,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,MAAM,cAAc,SAAS,aAAa,CAAC;IAC3C,MAAM,mBAAmB,SAAS,aAAa,CAAC;IAChD,MAAM,oBAAoB,SAAS,aAAa,CAAC;IACjD,MAAM,WAAW,SAAS,aAAa,CAAC;IACxC,MAAM,wBAAwB,SAAS,aAAa,CAAC;IACrD,MAAM,mCAAmC,SAAS,aAAa,CAAC;IAChE,MAAM,oBAAoB,SAAS,aAAa,CAAC;IACjD,MAAM,uBAAuB,SAAS,aAAa,CAAC;IACpD,MAAM,kBAAkB,SAAS,aAAa,CAAC;IAC/C,MAAM,eAAe,SAAS,aAAa,CAAC;IAE5C,MAAM,2BAA2B,OAAO;QACpC,EAAE,cAAc;QAChB,MAAM,UAAU,SAAS,aAAa,CAAC,wBAAwB,KAAK;QACpE,MAAM,cAAc,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;QACpD,MAAM,QAAQ,cAAc,YAAY,KAAK,GAAG;QAEhD,IAAI,CAAC,OAAO;QAEZ,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,CAAC,2DAA2D,EAAE,MAAM,CAAC;YAClG,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAClC,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,MAAM,OAAO,KAAK,CAAC,EAAE;YACrB,MAAM,uBAAuB,MAAM,OAAO,CAAC,KAAK,aAAa,IAAI;mBAAI,KAAK,aAAa;gBAAE;aAAQ,GAAG;gBAAC;aAAQ;YAE7G,MAAM,iBAAiB,MAAM,MAAM,CAAC,qDAAqD,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;gBAClG,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,eAAe;gBAAqB;YACxE;YACA,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,IAAI,MAAM;YAExC,MAAM;YACN,IAAI,kBAAkB,iBAAiB,KAAK;QAChD,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,gCAAgC;QAClD;IACJ;IAEA,MAAM,qBAAqB;QACvB,MAAM,cAAc,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;QACpD,MAAM,QAAQ,cAAc,YAAY,KAAK,GAAG;QAEhD,IAAI,CAAC,OAAO;QAEZ,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,CAAC,2DAA2D,EAAE,MAAM,CAAC;YAClG,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAClC,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,MAAM,gBAAgB,KAAK,CAAC,EAAE,EAAE,iBAAiB,EAAE;YACnD,IAAI,mBACA,kBAAkB,SAAS,GAAG,cAAc,GAAG,CAAC,CAAC,cAAc,QAC3D,CAAC;2BACM,EAAE,aAAa;4CACE,EAAE,MAAM;0BAC1B,CAAC,EACT,IAAI,CAAC;YAEX;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,kCAAkC;QACpD;IACJ;IAEA,MAAM,0BAA0B;QAC5B,MAAM,gBAAgB,SAAS,gBAAgB,CAAC;QAChD,cAAc,OAAO,CAAC,CAAA;YAClB,OAAO,gBAAgB,CAAC,SAAS;gBAC7B,MAAM,QAAQ,OAAO,OAAO,CAAC,KAAK;gBAClC,MAAM,cAAc,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;gBACpD,MAAM,QAAQ,cAAc,YAAY,KAAK,GAAG;gBAEhD,IAAI,CAAC,OAAO;gBAEZ,IAAI;oBACA,MAAM,WAAW,MAAM,MAAM,CAAC,2DAA2D,EAAE,MAAM,CAAC;oBAClG,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;oBAClC,MAAM,QAAQ,MAAM,SAAS,IAAI;oBACjC,MAAM,OAAO,KAAK,CAAC,EAAE;oBACrB,MAAM,uBAAuB,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM,SAAS;oBAEhF,MAAM,iBAAiB,MAAM,MAAM,CAAC,qDAAqD,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;wBAClG,QAAQ;wBACR,SAAS;4BACL,gBAAgB;wBACpB;wBACA,MAAM,KAAK,SAAS,CAAC;4BAAE,GAAG,IAAI;4BAAE,eAAe;wBAAqB;oBACxE;oBACA,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,IAAI,MAAM;oBAExC,MAAM;gBACV,EAAE,OAAO,OAAO;oBACZ,QAAQ,KAAK,CAAC,iCAAiC;gBACnD;YACJ;QACJ;IACJ;IAEA,MAAM,eAAe;QACjB,MAAM,aAAa,gBAAgB,KAAK,CAAC,WAAW;QACpD,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,CAAC,oDAAoD,CAAC;YACnF,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAClC,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,MAAM,gBAAgB,MAAM,MAAM,CAAC,CAAA,OAC/B,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,eACjC,KAAK,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC;YAExC,SAAS,SAAS,GAAG,cAAc,GAAG,CAAC,CAAA,OACnC,CAAC;uBACM,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC;iEACc,EAAE,KAAK,EAAE,CAAC;sBACrD,CAAC,EACT,IAAI,CAAC;YACP;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,kBAAkB;QACpC;IACJ;IAEA,MAAM,oCAAoC;QACtC,MAAM,0BAA0B,SAAS,gBAAgB,CAAC;QAC1D,wBAAwB,OAAO,CAAC,CAAA;YAC5B,OAAO,gBAAgB,CAAC,SAAS;gBAC7B,MAAM,SAAS,OAAO,OAAO,CAAC,IAAI;gBAClC,IAAI;oBACA,MAAM,WAAW,MAAM,MAAM,CAAC,qDAAqD,EAAE,OAAO,CAAC;oBAC7F,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;oBAClC,MAAM,OAAO,MAAM,SAAS,IAAI;oBAChC,kBAAkB,WAAW,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;oBAC9D,qBAAqB,SAAS,GAAG,KAAK,oBAAoB,CAAC,GAAG,CAAC,CAAA,MAC3D,CAAC,QAAQ,EAAE,IAAI,UAAU,CAAC,EAC5B,IAAI,CAAC;oBACP,sBAAsB,KAAK,CAAC,OAAO,GAAG;gBAC1C,EAAE,OAAO,OAAO;oBACZ,QAAQ,KAAK,CAAC,iCAAiC;gBACnD;YACJ;QACJ;IACJ;IAEA,MAAM,0BAA0B,OAAO;QACnC,EAAE,cAAc;QAChB,MAAM,OAAO,YAAY,KAAK;QAC9B,MAAM,UAAU,SAAS,aAAa,CAAC,mBAAmB,KAAK;QAC/D,MAAM,WAAW,SAAS,aAAa,CAAC,oBAAoB,KAAK;QAEjE,MAAM,cAAc,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;QACpD,MAAM,QAAQ,cAAc,YAAY,KAAK,GAAG;QAEhD,IAAI,CAAC,OAAO;QAEZ,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,CAAC,2DAA2D,EAAE,MAAM,CAAC;YAClG,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAClC,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,MAAM,OAAO,KAAK,CAAC,EAAE;YAErB,MAAM,iBAAiB,MAAM,MAAM,CAAC,qDAAqD,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;gBAClG,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE;oBAAM;oBAAS;gBAAS;YAC5D;YACA,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,IAAI,MAAM;YAExC,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE;gBAAM;gBAAS;YAAS;YACtF,aAAa,KAAK,CAAC,OAAO,GAAG;QACjC,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC9C;IACJ;IAEA,MAAM,aAAa,CAAC;QAChB,MAAM,KAAK,CAAC,OAAO,GAAG;IAC1B;IAEA,cAAc,gBAAgB,CAAC,SAAS;QACpC,aAAa,KAAK,CAAC,OAAO,GAAG;QAC7B,MAAM,cAAc,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;QACpD,IAAI,aAAa;YACb,YAAY,KAAK,GAAG,YAAY,IAAI,IAAI;YACxC,SAAS,aAAa,CAAC,mBAAmB,KAAK,GAAG,YAAY,OAAO,IAAI;QAC7E;IACJ;IAEA,wBAAwB,gBAAgB,CAAC,SAAS,IAAM,WAAW;IACnE,8BAA8B,gBAAgB,CAAC,SAAS,IAAM,WAAW;IACzE,iCAAiC,gBAAgB,CAAC,SAAS,IAAM,WAAW;IAE5E,oBAAoB,gBAAgB,CAAC,SAAS;QAC1C,mBAAmB,KAAK,CAAC,OAAO,GAAG;QACnC;IACJ;IAEA,aAAa,gBAAgB,CAAC,UAAU;IACxC,iBAAiB,gBAAgB,CAAC,UAAU;IAC5C,aAAa,gBAAgB,CAAC,SAAS;IAEvC,OAAO,gBAAgB,CAAC,SAAS,CAAC;QAC9B,IAAI,MAAM,MAAM,KAAK,cAAc,WAAW;QAC9C,IAAI,MAAM,MAAM,KAAK,oBAAoB,WAAW;QACpD,IAAI,MAAM,MAAM,KAAK,uBAAuB,WAAW;IAC3D;AACJ","sources":["src/js/settings.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n    const profileButton = document.querySelector(\"#profileCircle\");\n    const profileModal = document.querySelector(\"#profileModal\");\n    const notificationsModal = document.querySelector(\"#notificationsModal\");\n    const closeProfileModalButton = document.querySelector(\"#closeProfileModal\");\n    const closeNotificationsModalButton = document.querySelector(\"#closeNotificationsModal\");\n    const notificationsButton = document.querySelector(\"#notificationsButton\");\n    const settingsForm = document.querySelector(\"#settingsForm\");\n    const profileName = document.querySelector(\"#profileName\");\n    const notificationForm = document.querySelector(\"#notificationForm\");\n    const notificationsList = document.querySelector(\"#notificationsList\");\n    const userList = document.querySelector(\"#userList\");\n    const userConversationModal = document.querySelector(\"#userConversationModal\");\n    const closeUserConversationModalButton = document.querySelector(\"#closeUserConversationModal\");\n    const conversationTitle = document.querySelector(\"#conversationTitle\");\n    const conversationMessages = document.querySelector(\"#conversationMessages\");\n    const userSearchInput = document.querySelector(\"#userSearchInput\");\n    const searchButton = document.querySelector(\"#searchButton\");\n\n    const handleNotificationSubmit = async (e) => {\n        e.preventDefault();\n        const message = document.querySelector(\"#notificationMessage\").value;\n        const userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        const login = userProfile ? userProfile.login : null;\n\n        if (!login) return;\n\n        try {\n            const response = await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts?login=${login}`);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const users = await response.json();\n            const user = users[0];\n            const updatedNotifications = Array.isArray(user.notifications) ? [...user.notifications, message] : [message];\n\n            const updateResponse = await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts/${user.id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ ...user, notifications: updatedNotifications }),\n            });\n            if (!updateResponse.ok) throw new Error('Network response was not ok');\n\n            await fetchNotifications();\n            if (notificationForm) notificationForm.reset();\n        } catch (error) {\n            console.error('Sending notification failed:', error);\n        }\n    };\n\n    const fetchNotifications = async () => {\n        const userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        const login = userProfile ? userProfile.login : null;\n\n        if (!login) return;\n\n        try {\n            const response = await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts?login=${login}`);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const users = await response.json();\n            const notifications = users[0]?.notifications || [];\n            if (notificationsList) {\n                notificationsList.innerHTML = notifications.map((notification, index) =>\n                    `<div class=\"notification-item\">\n                        <p>${notification}</p>\n                        <button data-index=\"${index}\" class=\"delete-notification\">&times;</button>\n                    </div>`\n                ).join('');\n            }\n            addDeleteEventListeners();\n        } catch (error) {\n            console.error('Fetching notifications failed:', error);\n        }\n    };\n\n    const addDeleteEventListeners = () => {\n        const deleteButtons = document.querySelectorAll(\".delete-notification\");\n        deleteButtons.forEach(button => {\n            button.addEventListener(\"click\", async () => {\n                const index = button.dataset.index;\n                const userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n                const login = userProfile ? userProfile.login : null;\n\n                if (!login) return;\n\n                try {\n                    const response = await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts?login=${login}`);\n                    if (!response.ok) throw new Error('Network response was not ok');\n                    const users = await response.json();\n                    const user = users[0];\n                    const updatedNotifications = user.notifications.filter((_, i) => i !== parseInt(index));\n\n                    const updateResponse = await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts/${user.id}`, {\n                        method: \"PUT\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({ ...user, notifications: updatedNotifications }),\n                    });\n                    if (!updateResponse.ok) throw new Error('Network response was not ok');\n\n                    await fetchNotifications();\n                } catch (error) {\n                    console.error('Deleting notification failed:', error);\n                }\n            });\n        });\n    };\n\n    const handleSearch = async () => {\n        const searchTerm = userSearchInput.value.toLowerCase();\n        try {\n            const response = await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts`);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const users = await response.json();\n            const filteredUsers = users.filter(user =>\n                user.name.toLowerCase().includes(searchTerm) ||\n                user.surname.toLowerCase().includes(searchTerm)\n            );\n            userList.innerHTML = filteredUsers.map(user =>\n                `<div>\n                    <p>${user.name} ${user.surname}</p>\n                    <button class=\"view-conversation\" data-user=\"${user.id}\">Переглянути розмову</button>\n                </div>`\n            ).join('');\n            addViewConversationEventListeners();\n        } catch (error) {\n            console.error('Search failed:', error);\n        }\n    };\n\n    const addViewConversationEventListeners = () => {\n        const viewConversationButtons = document.querySelectorAll(\".view-conversation\");\n        viewConversationButtons.forEach(button => {\n            button.addEventListener(\"click\", async () => {\n                const userId = button.dataset.user;\n                try {\n                    const response = await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts/${userId}`);\n                    if (!response.ok) throw new Error('Network response was not ok');\n                    const user = await response.json();\n                    conversationTitle.textContent = `${user.name} ${user.surname}`;\n                    conversationMessages.innerHTML = user.conversationMessages.map(msg =>\n                        `<div><p>${msg}</p></div>`\n                    ).join('');\n                    userConversationModal.style.display = \"flex\";\n                } catch (error) {\n                    console.error('Fetching conversation failed:', error);\n                }\n            });\n        });\n    };\n\n    const handleProfileFormSubmit = async (e) => {\n        e.preventDefault();\n        const name = profileName.value;\n        const surname = document.querySelector(\"#profileSurname\").value;\n        const password = document.querySelector(\"#profilePassword\").value;\n\n        const userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        const login = userProfile ? userProfile.login : null;\n\n        if (!login) return;\n\n        try {\n            const response = await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts?login=${login}`);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const users = await response.json();\n            const user = users[0];\n\n            const updateResponse = await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts/${user.id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ ...user, name, surname, password }),\n            });\n            if (!updateResponse.ok) throw new Error('Network response was not ok');\n\n            localStorage.setItem(\"userProfile\", JSON.stringify({ ...user, name, surname, password }));\n            profileModal.style.display = \"none\";\n        } catch (error) {\n            console.error('Updating profile failed:', error);\n        }\n    };\n\n    const closeModal = (modal) => {\n        modal.style.display = \"none\";\n    };\n\n    profileButton.addEventListener(\"click\", () => {\n        profileModal.style.display = \"flex\";\n        const userProfile = JSON.parse(localStorage.getItem(\"userProfile\"));\n        if (userProfile) {\n            profileName.value = userProfile.name || '';\n            document.querySelector(\"#profileSurname\").value = userProfile.surname || '';\n        }\n    });\n\n    closeProfileModalButton.addEventListener(\"click\", () => closeModal(profileModal));\n    closeNotificationsModalButton.addEventListener(\"click\", () => closeModal(notificationsModal));\n    closeUserConversationModalButton.addEventListener(\"click\", () => closeModal(userConversationModal));\n\n    notificationsButton.addEventListener(\"click\", () => {\n        notificationsModal.style.display = \"flex\";\n        fetchNotifications();\n    });\n\n    settingsForm.addEventListener(\"submit\", handleProfileFormSubmit);\n    notificationForm.addEventListener(\"submit\", handleNotificationSubmit);\n    searchButton.addEventListener(\"click\", handleSearch);\n\n    window.addEventListener(\"click\", (event) => {\n        if (event.target === profileModal) closeModal(profileModal);\n        if (event.target === notificationsModal) closeModal(notificationsModal);\n        if (event.target === userConversationModal) closeModal(userConversationModal);\n    });\n});\n"],"names":[],"version":3,"file":"settings.4b1c9ff4.js.map","sourceRoot":"/__parcel_source_root/"}