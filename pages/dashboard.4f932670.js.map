{"mappings":"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","sources":["<anon>","src/js/dashboard.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", ()=>{\n    const userProfile = JSON.parse(localStorage.getItem(\"userProfile\")) || {};\n    const showCoursesButton = document.getElementById(\"showCourses\");\n    const courseModal = document.getElementById(\"courseModal\");\n    const closeModal = document.querySelector(\".close\");\n    const courseList = document.getElementById(\"courseList\");\n    const addedCourses = document.getElementById(\"addedCourses\");\n    const profileCircle = document.getElementById(\"profileCircle\");\n    if (userProfile.name) {\n        profileCircle.textContent = userProfile.name.charAt(0).toUpperCase();\n        profileCircle.href = \"../pages/settings.html\";\n    } else profileCircle.style.display = \"none\";\n    const renderAddedCourses = ()=>{\n        addedCourses.innerHTML = \"<h3>\\u0414\\u043E\\u0434\\u0430\\u043D\\u0456 \\u043A\\u0443\\u0440\\u0441\\u0438:</h3>\";\n        if (userProfile.courses && userProfile.courses.length > 0) userProfile.courses.forEach((course)=>{\n            const courseBox = document.createElement(\"div\");\n            courseBox.classList.add(\"course-box\");\n            const a = document.createElement(\"a\");\n            a.textContent = course.name;\n            a.href = course.link;\n            a.classList.add(\"course-link\");\n            courseBox.appendChild(a);\n            addedCourses.appendChild(courseBox);\n        });\n    };\n    const addCourse = async (course)=>{\n        if (!userProfile.courses) userProfile.courses = [];\n        if (!userProfile.courses.find((c)=>c.id === course.id)) {\n            userProfile.courses.push(course);\n            localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\n            await saveCourseToAPI(userProfile);\n            renderAddedCourses();\n            alert(`\\u{41A}\\u{443}\\u{440}\\u{441} ${course.name} \\u{434}\\u{43E}\\u{434}\\u{430}\\u{43D}\\u{43E} \\u{434}\\u{43E} \\u{432}\\u{430}\\u{448}\\u{43E}\\u{433}\\u{43E} \\u{43F}\\u{440}\\u{43E}\\u{444}\\u{456}\\u{43B}\\u{44E}`);\n        } else alert(\"\\u0426\\u0435\\u0439 \\u043A\\u0443\\u0440\\u0441 \\u0432\\u0436\\u0435 \\u0434\\u043E\\u0434\\u0430\\u043D\\u043E \\u0434\\u043E \\u0432\\u0430\\u0448\\u043E\\u0433\\u043E \\u043F\\u0440\\u043E\\u0444\\u0456\\u043B\\u044E\");\n    };\n    const saveCourseToAPI = async (profile)=>{\n        try {\n            await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts/${profile.id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(profile)\n            });\n        } catch (error) {\n            console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0431\\u0435\\u0440\\u0435\\u0436\\u0435\\u043D\\u043D\\u0456 \\u043A\\u0443\\u0440\\u0441\\u0443 \\u0434\\u043E API\", error);\n        }\n    };\n    showCoursesButton.onclick = ()=>{\n        courseModal.style.display = \"block\";\n    };\n    closeModal.onclick = ()=>{\n        courseModal.style.display = \"none\";\n    };\n    window.onclick = (event)=>{\n        if (event.target == courseModal) courseModal.style.display = \"none\";\n    };\n    courseList.addEventListener(\"click\", (event)=>{\n        if (event.target.classList.contains(\"course-link\")) {\n            event.preventDefault();\n            const link = event.target;\n            const course = {\n                id: parseInt(link.getAttribute(\"data-id\")),\n                name: link.getAttribute(\"data-name\"),\n                link: link.getAttribute(\"href\")\n            };\n            addCourse(course);\n            link.style.display = \"none\";\n        }\n    });\n    renderAddedCourses();\n});\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const calendarDays = document.querySelector(\"#calendarDays\");\n    const eventForm = document.querySelector(\"#eventForm\");\n    const eventList = document.querySelector(\"#eventList\");\n    const eventDateInput = document.querySelector(\"#eventDate\");\n    const eventTitleInput = document.querySelector(\"#eventTitle\");\n    const calendarTitle = document.querySelector(\"#calendarTitle\");\n    const prevMonthButton = document.querySelector(\"#prevMonth\");\n    const nextMonthButton = document.querySelector(\"#nextMonth\");\n    let currentMonth;\n    let currentYear;\n    function initializeCalendar() {\n        const now = new Date();\n        currentMonth = now.getMonth();\n        currentYear = now.getFullYear();\n        renderCalendar();\n    }\n    function renderCalendar() {\n        const firstDayOfMonth = new Date(currentYear, currentMonth, 1);\n        const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);\n        calendarTitle.textContent = `${firstDayOfMonth.toLocaleString(\"uk-UA\", {\n            month: \"long\"\n        })} ${currentYear}`;\n        calendarDays.innerHTML = \"\";\n        for(let i = 0; i < firstDayOfMonth.getDay(); i++)calendarDays.innerHTML += '<div class=\"calendar-day\"></div>';\n        for(let day = 1; day <= lastDayOfMonth.getDate(); day++)calendarDays.innerHTML += `<div class=\"calendar-day\" data-date=\"${currentYear}-${currentMonth + 1}-${day}\">${day}</div>`;\n        const daysInWeek = 7;\n        const totalDays = firstDayOfMonth.getDay() + lastDayOfMonth.getDate();\n        const remainingDays = (daysInWeek - totalDays % daysInWeek) % daysInWeek;\n        for(let i = 0; i < remainingDays; i++)calendarDays.innerHTML += '<div class=\"calendar-day\"></div>';\n        loadEvents();\n    }\n    function loadEvents() {\n        const events = JSON.parse(localStorage.getItem(\"events\")) || [];\n        eventList.innerHTML = \"\";\n        events.forEach((event)=>{\n            const eventElement = document.createElement(\"div\");\n            eventElement.className = \"event\";\n            eventElement.innerHTML = `\r\n        <span class=\"event-date\">${new Date(event.date).toLocaleDateString(\"uk-UA\")}</span>\r\n        <span class=\"event-title\">${event.title}</span>\r\n        <button class=\"delete-event\" data-date=\"${event.date}\" data-title=\"${event.title}\">\\u{412}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{438}</button>\r\n      `;\n            eventList.appendChild(eventElement);\n        });\n    }\n    function saveEvent(event) {\n        event.preventDefault();\n        const date = eventDateInput.value;\n        const title = eventTitleInput.value;\n        if (date && title) {\n            const events = JSON.parse(localStorage.getItem(\"events\")) || [];\n            events.push({\n                date,\n                title\n            });\n            localStorage.setItem(\"events\", JSON.stringify(events));\n            eventDateInput.value = \"\";\n            eventTitleInput.value = \"\";\n            renderCalendar();\n        }\n    }\n    function deleteEvent(date, title) {\n        const events = JSON.parse(localStorage.getItem(\"events\")) || [];\n        const updatedEvents = events.filter((event)=>event.date !== date || event.title !== title);\n        localStorage.setItem(\"events\", JSON.stringify(updatedEvents));\n        renderCalendar();\n    }\n    eventForm.addEventListener(\"submit\", saveEvent);\n    eventList.addEventListener(\"click\", (event)=>{\n        if (event.target.classList.contains(\"delete-event\")) {\n            const date = event.target.getAttribute(\"data-date\");\n            const title = event.target.getAttribute(\"data-title\");\n            deleteEvent(date, title);\n        }\n    });\n    prevMonthButton.addEventListener(\"click\", ()=>{\n        currentMonth--;\n        if (currentMonth < 0) {\n            currentMonth = 11;\n            currentYear--;\n        }\n        renderCalendar();\n    });\n    nextMonthButton.addEventListener(\"click\", ()=>{\n        currentMonth++;\n        if (currentMonth > 11) {\n            currentMonth = 0;\n            currentYear++;\n        }\n        renderCalendar();\n    });\n    initializeCalendar();\n});\n\n//# sourceMappingURL=dashboard.4f932670.js.map\n","document.addEventListener(\"DOMContentLoaded\", () => {\r\n  const userProfile = JSON.parse(localStorage.getItem(\"userProfile\")) || {};\r\n  const showCoursesButton = document.getElementById(\"showCourses\");\r\n  const courseModal = document.getElementById(\"courseModal\");\r\n  const closeModal = document.querySelector(\".close\");\r\n  const courseList = document.getElementById(\"courseList\");\r\n  const addedCourses = document.getElementById(\"addedCourses\");\r\n  const profileCircle = document.getElementById(\"profileCircle\");\r\n\r\n  if (userProfile.name) {\r\n    profileCircle.textContent = userProfile.name.charAt(0).toUpperCase();\r\n    profileCircle.href = \"../pages/settings.html\";\r\n  } else {\r\n    profileCircle.style.display = \"none\";\r\n  }\r\n\r\n  const renderAddedCourses = () => {\r\n    addedCourses.innerHTML = \"<h3>Додані курси:</h3>\";\r\n    if (userProfile.courses && userProfile.courses.length > 0) {\r\n      userProfile.courses.forEach((course) => {\r\n        const courseBox = document.createElement(\"div\");\r\n        courseBox.classList.add(\"course-box\");\r\n        const a = document.createElement(\"a\");\r\n        a.textContent = course.name;\r\n        a.href = course.link;\r\n        a.classList.add(\"course-link\");\r\n        courseBox.appendChild(a);\r\n        addedCourses.appendChild(courseBox);\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCourse = async (course) => {\r\n    if (!userProfile.courses) {\r\n      userProfile.courses = [];\r\n    }\r\n\r\n    if (!userProfile.courses.find((c) => c.id === course.id)) {\r\n      userProfile.courses.push(course);\r\n      localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\r\n      await saveCourseToAPI(userProfile);\r\n      renderAddedCourses();\r\n      alert(`Курс ${course.name} додано до вашого профілю`);\r\n    } else {\r\n      alert(\"Цей курс вже додано до вашого профілю\");\r\n    }\r\n  };\r\n\r\n  const saveCourseToAPI = async (profile) => {\r\n    try {\r\n      await fetch(\r\n        `https://669a78899ba098ed61ffc5a3.mockapi.io/accounts/${profile.id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(profile),\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Помилка при збереженні курсу до API\", error);\r\n    }\r\n  };\r\n\r\n  showCoursesButton.onclick = () => {\r\n    courseModal.style.display = \"block\";\r\n  };\r\n\r\n  closeModal.onclick = () => {\r\n    courseModal.style.display = \"none\";\r\n  };\r\n\r\n  window.onclick = (event) => {\r\n    if (event.target == courseModal) {\r\n      courseModal.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  courseList.addEventListener(\"click\", (event) => {\r\n    if (event.target.classList.contains(\"course-link\")) {\r\n      event.preventDefault();\r\n      const link = event.target;\r\n      const course = {\r\n        id: parseInt(link.getAttribute(\"data-id\")),\r\n        name: link.getAttribute(\"data-name\"),\r\n        link: link.getAttribute(\"href\"),\r\n      };\r\n      addCourse(course);\r\n      link.style.display = \"none\";\r\n    }\r\n  });\r\n\r\n  renderAddedCourses();\r\n});\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const calendarDays = document.querySelector(\"#calendarDays\");\r\n  const eventForm = document.querySelector(\"#eventForm\");\r\n  const eventList = document.querySelector(\"#eventList\");\r\n  const eventDateInput = document.querySelector(\"#eventDate\");\r\n  const eventTitleInput = document.querySelector(\"#eventTitle\");\r\n  const calendarTitle = document.querySelector(\"#calendarTitle\");\r\n  const prevMonthButton = document.querySelector(\"#prevMonth\");\r\n  const nextMonthButton = document.querySelector(\"#nextMonth\");\r\n\r\n  let currentMonth;\r\n  let currentYear;\r\n\r\n  function initializeCalendar() {\r\n    const now = new Date();\r\n    currentMonth = now.getMonth();\r\n    currentYear = now.getFullYear();\r\n    renderCalendar();\r\n  }\r\n\r\n  function renderCalendar() {\r\n    const firstDayOfMonth = new Date(currentYear, currentMonth, 1);\r\n    const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);\r\n\r\n    calendarTitle.textContent = `${firstDayOfMonth.toLocaleString('uk-UA', { month: 'long' })} ${currentYear}`;\r\n\r\n    calendarDays.innerHTML = '';\r\n\r\n    for (let i = 0; i < firstDayOfMonth.getDay(); i++) {\r\n      calendarDays.innerHTML += '<div class=\"calendar-day\"></div>';\r\n    }\r\n\r\n    for (let day = 1; day <= lastDayOfMonth.getDate(); day++) {\r\n      calendarDays.innerHTML += `<div class=\"calendar-day\" data-date=\"${currentYear}-${currentMonth + 1}-${day}\">${day}</div>`;\r\n    }\r\n\r\n    const daysInWeek = 7;\r\n    const totalDays = firstDayOfMonth.getDay() + lastDayOfMonth.getDate();\r\n    const remainingDays = (daysInWeek - (totalDays % daysInWeek)) % daysInWeek;\r\n    for (let i = 0; i < remainingDays; i++) {\r\n      calendarDays.innerHTML += '<div class=\"calendar-day\"></div>';\r\n    }\r\n\r\n    loadEvents();\r\n  }\r\n\r\n  function loadEvents() {\r\n    const events = JSON.parse(localStorage.getItem(\"events\")) || [];\r\n    eventList.innerHTML = '';\r\n\r\n    events.forEach(event => {\r\n      const eventElement = document.createElement(\"div\");\r\n      eventElement.className = \"event\";\r\n      eventElement.innerHTML = `\r\n        <span class=\"event-date\">${new Date(event.date).toLocaleDateString('uk-UA')}</span>\r\n        <span class=\"event-title\">${event.title}</span>\r\n        <button class=\"delete-event\" data-date=\"${event.date}\" data-title=\"${event.title}\">Видалити</button>\r\n      `;\r\n      eventList.appendChild(eventElement);\r\n    });\r\n  }\r\n\r\n  function saveEvent(event) {\r\n    event.preventDefault();\r\n    \r\n    const date = eventDateInput.value;\r\n    const title = eventTitleInput.value;\r\n    \r\n    if (date && title) {\r\n      const events = JSON.parse(localStorage.getItem(\"events\")) || [];\r\n      events.push({ date, title });\r\n      localStorage.setItem(\"events\", JSON.stringify(events));\r\n      eventDateInput.value = '';\r\n      eventTitleInput.value = '';\r\n      renderCalendar();\r\n    }\r\n  }\r\n\r\n  function deleteEvent(date, title) {\r\n    const events = JSON.parse(localStorage.getItem(\"events\")) || [];\r\n    const updatedEvents = events.filter(event => event.date !== date || event.title !== title);\r\n    localStorage.setItem(\"events\", JSON.stringify(updatedEvents));\r\n    renderCalendar();\r\n  }\r\n\r\n  eventForm.addEventListener(\"submit\", saveEvent);\r\n\r\n  eventList.addEventListener(\"click\", (event) => {\r\n    if (event.target.classList.contains(\"delete-event\")) {\r\n      const date = event.target.getAttribute(\"data-date\");\r\n      const title = event.target.getAttribute(\"data-title\");\r\n      deleteEvent(date, title);\r\n    }\r\n  });\r\n\r\n  prevMonthButton.addEventListener(\"click\", () => {\r\n    currentMonth--;\r\n    if (currentMonth < 0) {\r\n      currentMonth = 11;\r\n      currentYear--;\r\n    }\r\n    renderCalendar();\r\n  });\r\n\r\n  nextMonthButton.addEventListener(\"click\", () => {\r\n    currentMonth++;\r\n    if (currentMonth > 11) {\r\n      currentMonth = 0;\r\n      currentYear++;\r\n    }\r\n    renderCalendar();\r\n  });\r\n\r\n  initializeCalendar();\r\n});\r\n"],"names":["document","addEventListener","userProfile","JSON","parse","localStorage","getItem","showCoursesButton","getElementById","courseModal","closeModal","querySelector","courseList","addedCourses","profileCircle","name","textContent","charAt","toUpperCase","href","style","display","renderAddedCourses","innerHTML","courses","length","forEach","course","courseBox","createElement","classList","add","a","link","appendChild","addCourse","find","c","id","alert","push","setItem","stringify","saveCourseToAPI","profile","fetch","method","headers","body","error","console","onclick","window","event","target","contains","preventDefault","parseInt","getAttribute","currentMonth","currentYear","calendarDays","eventForm","eventList","eventDateInput","eventTitleInput","calendarTitle","prevMonthButton","nextMonthButton","renderCalendar","firstDayOfMonth","Date","lastDayOfMonth","toLocaleString","month","i","getDay","day","getDate","remainingDays","daysInWeek","totalDays","loadEvents","events","eventElement","className","date","toLocaleDateString","title","value","deleteEvent","updatedEvents","filter","initializeCalendar","now","getMonth","getFullYear"],"version":3,"file":"dashboard.4f932670.js.map"}