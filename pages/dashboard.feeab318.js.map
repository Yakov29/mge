{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,IAAM,EAAc,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,iBAAmB,CAAC,EAClE,EAAoB,SAAS,cAAc,CAAC,eAC5C,EAAc,SAAS,cAAc,CAAC,eACtC,EAAa,SAAS,aAAa,CAAC,UACpC,EAAa,SAAS,cAAc,CAAC,cACrC,EAAe,SAAS,cAAc,CAAC,gBACvC,EAAgB,SAAS,cAAc,CAAC,gBAE1C,CAAA,EAAY,IAAI,EAChB,EAAc,WAAW,CAAG,EAAY,IAAI,CAAC,MAAM,CAAC,GAAG,WAAW,GAClE,EAAc,IAAI,CAAG,0BAErB,EAAc,KAAK,CAAC,OAAO,CAAG,OAGlC,IAAM,EAAqB,KACvB,EAAa,SAAS,CAAG,yBACrB,EAAY,OAAO,EAAI,EAAY,OAAO,CAAC,MAAM,CAAG,GACpD,EAAY,OAAO,CAAC,OAAO,CAAC,AAAA,IACxB,IAAM,EAAY,SAAS,aAAa,CAAC,OACzC,EAAU,SAAS,CAAC,GAAG,CAAC,cACxB,IAAM,EAAI,SAAS,aAAa,CAAC,IACjC,CAAA,EAAE,WAAW,CAAG,EAAO,IAAI,CAC3B,EAAE,IAAI,CAAG,EAAO,IAAI,CACpB,EAAE,SAAS,CAAC,GAAG,CAAC,eAChB,EAAU,WAAW,CAAC,GACtB,EAAa,WAAW,CAAC,EAC7B,EAER,EAEM,EAAY,MAAO,IAChB,EAAY,OAAO,EACpB,CAAA,EAAY,OAAO,CAAG,EAAE,AAAF,EAGrB,EAAY,OAAO,CAAC,IAAI,CAAC,AAAA,GAAK,EAAE,EAAE,GAAK,EAAO,EAAE,EAOjD,MAAM,0CANN,EAAY,OAAO,CAAC,IAAI,CAAC,GACzB,aAAa,OAAO,CAAC,cAAe,KAAK,SAAS,CAAC,IACnD,MAAM,EAAgB,GACtB,IACA,MAAM,CAAC,6BAAK,EAAE,EAAO,IAAI,CAAC,uJAAyB,CAAC,EAI5D,EAEM,EAAkB,MAAO,IAC3B,GAAI,CACA,MAAM,MAAM,CAAC,qDAAqD,EAAE,EAAQ,EAAE,CAAC,CAAC,CAAE,CAC9E,OAAQ,MACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,EACzB,EACJ,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,sCAAuC,EACzD,CACJ,CAEA,CAAA,EAAkB,OAAO,CAAG,KACxB,EAAY,KAAK,CAAC,OAAO,CAAG,OAChC,EAEA,EAAW,OAAO,CAAG,KACjB,EAAY,KAAK,CAAC,OAAO,CAAG,MAChC,EAEA,OAAO,OAAO,CAAG,AAAC,IACV,EAAM,MAAM,EAAI,GAChB,CAAA,EAAY,KAAK,CAAC,OAAO,CAAG,MADhC,CAGJ,EAEA,EAAW,gBAAgB,CAAC,QAAS,AAAC,IAClC,GAAI,EAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAgB,CAChD,EAAM,cAAc,GACpB,IAAM,EAAO,EAAM,MAAM,CAMzB,EALe,CACX,GAAI,SAAS,EAAK,YAAY,CAAC,YAC/B,KAAM,EAAK,YAAY,CAAC,aACxB,KAAM,EAAK,YAAY,CAAC,OAC5B,GAEA,EAAK,KAAK,CAAC,OAAO,CAAG,MACzB,CACJ,GAEA,GACJ","sources":["<anon>","src/js/dashboard.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", ()=>{\n    const userProfile = JSON.parse(localStorage.getItem(\"userProfile\")) || {};\n    const showCoursesButton = document.getElementById(\"showCourses\");\n    const courseModal = document.getElementById(\"courseModal\");\n    const closeModal = document.querySelector(\".close\");\n    const courseList = document.getElementById(\"courseList\");\n    const addedCourses = document.getElementById(\"addedCourses\");\n    const profileCircle = document.getElementById(\"profileCircle\");\n    if (userProfile.name) {\n        profileCircle.textContent = userProfile.name.charAt(0).toUpperCase();\n        profileCircle.href = \"../pages/settings.html\";\n    } else profileCircle.style.display = \"none\";\n    const renderAddedCourses = ()=>{\n        addedCourses.innerHTML = \"<h3>\\u0414\\u043E\\u0434\\u0430\\u043D\\u0456 \\u043A\\u0443\\u0440\\u0441\\u0438:</h3>\";\n        if (userProfile.courses && userProfile.courses.length > 0) userProfile.courses.forEach((course)=>{\n            const courseBox = document.createElement(\"div\");\n            courseBox.classList.add(\"course-box\");\n            const a = document.createElement(\"a\");\n            a.textContent = course.name;\n            a.href = course.link;\n            a.classList.add(\"course-link\");\n            courseBox.appendChild(a);\n            addedCourses.appendChild(courseBox);\n        });\n    };\n    const addCourse = async (course)=>{\n        if (!userProfile.courses) userProfile.courses = [];\n        if (!userProfile.courses.find((c)=>c.id === course.id)) {\n            userProfile.courses.push(course);\n            localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\n            await saveCourseToAPI(userProfile);\n            renderAddedCourses();\n            alert(`\\u{41A}\\u{443}\\u{440}\\u{441} ${course.name} \\u{434}\\u{43E}\\u{434}\\u{430}\\u{43D}\\u{43E} \\u{434}\\u{43E} \\u{432}\\u{430}\\u{448}\\u{43E}\\u{433}\\u{43E} \\u{43F}\\u{440}\\u{43E}\\u{444}\\u{456}\\u{43B}\\u{44E}`);\n        } else alert(\"\\u0426\\u0435\\u0439 \\u043A\\u0443\\u0440\\u0441 \\u0432\\u0436\\u0435 \\u0434\\u043E\\u0434\\u0430\\u043D\\u043E \\u0434\\u043E \\u0432\\u0430\\u0448\\u043E\\u0433\\u043E \\u043F\\u0440\\u043E\\u0444\\u0456\\u043B\\u044E\");\n    };\n    const saveCourseToAPI = async (profile)=>{\n        try {\n            await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts/${profile.id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(profile)\n            });\n        } catch (error) {\n            console.error(\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0431\\u0435\\u0440\\u0435\\u0436\\u0435\\u043D\\u043D\\u0456 \\u043A\\u0443\\u0440\\u0441\\u0443 \\u0434\\u043E API\", error);\n        }\n    };\n    showCoursesButton.onclick = ()=>{\n        courseModal.style.display = \"block\";\n    };\n    closeModal.onclick = ()=>{\n        courseModal.style.display = \"none\";\n    };\n    window.onclick = (event)=>{\n        if (event.target == courseModal) courseModal.style.display = \"none\";\n    };\n    courseList.addEventListener(\"click\", (event)=>{\n        if (event.target.classList.contains(\"course-link\")) {\n            event.preventDefault();\n            const link = event.target;\n            const course = {\n                id: parseInt(link.getAttribute(\"data-id\")),\n                name: link.getAttribute(\"data-name\"),\n                link: link.getAttribute(\"href\")\n            };\n            addCourse(course);\n            link.style.display = \"none\";\n        }\n    });\n    renderAddedCourses();\n});\n\n//# sourceMappingURL=dashboard.feeab318.js.map\n","document.addEventListener('DOMContentLoaded', () => {\r\n    const userProfile = JSON.parse(localStorage.getItem('userProfile')) || {};\r\n    const showCoursesButton = document.getElementById('showCourses');\r\n    const courseModal = document.getElementById('courseModal');\r\n    const closeModal = document.querySelector('.close');\r\n    const courseList = document.getElementById('courseList');\r\n    const addedCourses = document.getElementById('addedCourses');\r\n    const profileCircle = document.getElementById('profileCircle');\r\n\r\n    if (userProfile.name) {\r\n        profileCircle.textContent = userProfile.name.charAt(0).toUpperCase();\r\n        profileCircle.href = \"../pages/settings.html\";\r\n    } else {\r\n        profileCircle.style.display = 'none';\r\n    }\r\n\r\n    const renderAddedCourses = () => {\r\n        addedCourses.innerHTML = '<h3>Додані курси:</h3>';\r\n        if (userProfile.courses && userProfile.courses.length > 0) {\r\n            userProfile.courses.forEach(course => {\r\n                const courseBox = document.createElement('div');\r\n                courseBox.classList.add('course-box');\r\n                const a = document.createElement('a');\r\n                a.textContent = course.name;\r\n                a.href = course.link;\r\n                a.classList.add('course-link');\r\n                courseBox.appendChild(a);\r\n                addedCourses.appendChild(courseBox);\r\n            });\r\n        }\r\n    };\r\n\r\n    const addCourse = async (course) => {\r\n        if (!userProfile.courses) {\r\n            userProfile.courses = [];\r\n        }\r\n\r\n        if (!userProfile.courses.find(c => c.id === course.id)) {\r\n            userProfile.courses.push(course);\r\n            localStorage.setItem('userProfile', JSON.stringify(userProfile));\r\n            await saveCourseToAPI(userProfile);\r\n            renderAddedCourses();\r\n            alert(`Курс ${course.name} додано до вашого профілю`);\r\n        } else {\r\n            alert('Цей курс вже додано до вашого профілю');\r\n        }\r\n    };\r\n\r\n    const saveCourseToAPI = async (profile) => {\r\n        try {\r\n            await fetch(`https://669a78899ba098ed61ffc5a3.mockapi.io/accounts/${profile.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(profile)\r\n            });\r\n        } catch (error) {\r\n            console.error('Помилка при збереженні курсу до API', error);\r\n        }\r\n    };\r\n\r\n    showCoursesButton.onclick = () => {\r\n        courseModal.style.display = 'block';\r\n    };\r\n\r\n    closeModal.onclick = () => {\r\n        courseModal.style.display = 'none';\r\n    };\r\n\r\n    window.onclick = (event) => {\r\n        if (event.target == courseModal) {\r\n            courseModal.style.display = 'none';\r\n        }\r\n    };\r\n\r\n    courseList.addEventListener('click', (event) => {\r\n        if (event.target.classList.contains('course-link')) {\r\n            event.preventDefault();\r\n            const link = event.target;\r\n            const course = {\r\n                id: parseInt(link.getAttribute('data-id')),\r\n                name: link.getAttribute('data-name'),\r\n                link: link.getAttribute('href')\r\n            };\r\n            addCourse(course);\r\n            link.style.display = 'none';\r\n        }\r\n    });\r\n\r\n    renderAddedCourses();\r\n});"],"names":["document","addEventListener","userProfile","JSON","parse","localStorage","getItem","showCoursesButton","getElementById","courseModal","closeModal","querySelector","courseList","addedCourses","profileCircle","name","textContent","charAt","toUpperCase","href","style","display","renderAddedCourses","innerHTML","courses","length","forEach","course","courseBox","createElement","classList","add","a","link","appendChild","addCourse","find","c","id","alert","push","setItem","stringify","saveCourseToAPI","profile","fetch","method","headers","body","error","console","onclick","window","event","target","contains","preventDefault","parseInt","getAttribute"],"version":3,"file":"dashboard.feeab318.js.map"}