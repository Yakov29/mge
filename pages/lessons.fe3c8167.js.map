{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,UAC5C,IAAM,EAAgB,SAAS,cAAc,CAAC,iBACxC,EAAiB,SAAS,cAAc,CAAC,kBAazC,EAAmB,UACvB,GAAI,CACF,IAAM,EAAW,MAAM,MACrB,yDAEF,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,+BAClC,OAAO,MAAM,EAAS,IAAI,EAC5B,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,sCAAuC,GAC9C,CAAC,CACV,CACF,EAEM,EAAuB,AAAC,IAC5B,EAAe,SAAS,CAAG,GAQ3B,AANiB,CACf,CAAE,KAAM,YAAa,GAAI,CAAE,EAC3B,CAAE,KAAM,kBAAmB,GAAI,CAAE,EACjC,CAAE,KAAM,mBAAoB,GAAI,CAAE,EACnC,CAEQ,OAAO,CAAC,AAAC,IAChB,IAAM,EAAiB,EAAQ,MAAM,CACnC,AAAC,GAAW,EAAO,EAAE,GAAK,EAAQ,EAAE,EAGtC,GAAI,EAAe,MAAM,CAAG,EAAG,CAC7B,IAAM,EAAiB,SAAS,aAAa,CAAC,MAC9C,CAAA,EAAe,SAAS,CAAG,CAAC;uDACmB,EAAE,EAAQ,IAAI,CAAC;;wBAE9C,EAAE,EACC,GAAG,CACF,AAAC,GAAW,CAAC;;yCAEA,EAAE,EAAO,IAAI,CAAC,+BAA+B,EAAE,EAAO,IAAI,CAAC;;wBAE5E,CAAC,EAEE,IAAI,CAAC,IAAI;;gBAEpB,CAAC,CACT,EAAe,WAAW,CAAC,EAC7B,CACF,EACF,EAEM,EAAc,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,iBAAmB,CAAC,EAClE,EAAc,MAAM,IAE1B,AA9D4B,CAAA,KAC1B,IAAM,EAAc,aAAa,OAAO,CAAC,eACzC,GAAI,EAAa,CACf,IAAM,EAAO,KAAK,KAAK,CAAC,EACxB,CAAA,EAAc,WAAW,CAAG,EAAK,IAAI,CAAC,EAAE,CAAC,WAAW,GACpD,EAAc,KAAK,CAAC,OAAO,CAAG,MAChC,MACE,EAAc,KAAK,CAAC,OAAO,CAAG,MAElC,CAAA,IAuDI,EAAY,OAAO,EAAI,EAAY,OAAO,CAAC,MAAM,CAAG,EACtD,EAAqB,EAAY,OAAO,EAC/B,EAAY,OAAO,EAAI,EAAY,OAAO,CAAC,MAAM,CAAG,GAC7D,EAAqB,EAAY,OAAO,CAE5C","sources":["<anon>","src/js/lessons.js"],"sourcesContent":["var $7fa0b8d5deef5218$exports = {};\ndocument.addEventListener(\"DOMContentLoaded\", async ()=>{\n    const profileCircle = document.getElementById(\"profileCircle\");\n    const coursesSection = document.getElementById(\"coursesSection\");\n    const updateProfileButton = ()=>{\n        const userProfile = localStorage.getItem(\"userProfile\");\n        if (userProfile) {\n            const user = JSON.parse(userProfile);\n            profileCircle.textContent = user.name[0].toUpperCase();\n            profileCircle.style.display = \"flex\";\n        } else profileCircle.style.display = \"none\";\n    };\n    const fetchProfileData = async ()=>{\n        try {\n            const response = await fetch(\"https://669a78899ba098ed61ffc5a3.mockapi.io/accounts/\");\n            if (!response.ok) throw new Error(\"Network response was not ok\");\n            return await response.json();\n        } catch (error) {\n            console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F:\", error);\n            return {};\n        }\n    };\n    const renderCourseSections = (courses)=>{\n        coursesSection.innerHTML = \"\";\n        const sections = [\n            {\n                name: \"\\u0425\\u0456\\u043C\\u0456\\u044F 101\",\n                id: 1\n            },\n            {\n                name: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0456\\u0447\\u043D\\u0430 \\u0445\\u0456\\u043C\\u0456\\u044F\",\n                id: 2\n            },\n            {\n                name: \"\\u0410\\u043D\\u0430\\u043B\\u0456\\u0442\\u0438\\u0447\\u043D\\u0430 \\u0445\\u0456\\u043C\\u0456\\u044F\",\n                id: 3\n            }\n        ];\n        sections.forEach((section)=>{\n            const sectionCourses = courses.filter((course)=>course.id === section.id);\n            if (sectionCourses.length > 0) {\n                const sectionElement = document.createElement(\"div\");\n                sectionElement.innerHTML = `\n                    <h3 class=\"lessons__chapter-title\">${section.name}</h3>\n                    <ul class=\"lessons__chapter\">\n                        ${sectionCourses.map((course)=>`\n                            <li class=\"lessons__lesson\">\n                                <a href=\"${course.link}\" class=\"lessons__lesson-link\">${course.name}</a>\n                            </li>\n                        `).join(\"\")}\n                    </ul>\n                `;\n                coursesSection.appendChild(sectionElement);\n            }\n        });\n    };\n    const userProfile = JSON.parse(localStorage.getItem(\"userProfile\")) || {};\n    const profileData = await fetchProfileData();\n    updateProfileButton();\n    if (userProfile.courses && userProfile.courses.length > 0) renderCourseSections(userProfile.courses);\n    else if (profileData.courses && profileData.courses.length > 0) renderCourseSections(profileData.courses);\n});\n\n\n//# sourceMappingURL=lessons.fe3c8167.js.map\n","document.addEventListener(\"DOMContentLoaded\", async () => {\n  const profileCircle = document.getElementById(\"profileCircle\");\n  const coursesSection = document.getElementById(\"coursesSection\");\n\n  const updateProfileButton = () => {\n    const userProfile = localStorage.getItem(\"userProfile\");\n    if (userProfile) {\n      const user = JSON.parse(userProfile);\n      profileCircle.textContent = user.name[0].toUpperCase();\n      profileCircle.style.display = \"flex\";\n    } else {\n      profileCircle.style.display = \"none\";\n    }\n  };\n\n  const fetchProfileData = async () => {\n    try {\n      const response = await fetch(\n        \"https://669a78899ba098ed61ffc5a3.mockapi.io/accounts/\"\n      );\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return await response.json();\n    } catch (error) {\n      console.error(\"Ошибка при загрузке данных профиля:\", error);\n      return {};\n    }\n  };\n\n  const renderCourseSections = (courses) => {\n    coursesSection.innerHTML = \"\";\n\n    const sections = [\n      { name: \"Хімія 101\", id: 1 },\n      { name: \"Органічна хімія\", id: 2 },\n      { name: \"Аналітична хімія\", id: 3 },\n    ];\n\n    sections.forEach((section) => {\n      const sectionCourses = courses.filter(\n        (course) => course.id === section.id\n      );\n\n      if (sectionCourses.length > 0) {\n        const sectionElement = document.createElement(\"div\");\n        sectionElement.innerHTML = `\n                    <h3 class=\"lessons__chapter-title\">${section.name}</h3>\n                    <ul class=\"lessons__chapter\">\n                        ${sectionCourses\n                          .map(\n                            (course) => `\n                            <li class=\"lessons__lesson\">\n                                <a href=\"${course.link}\" class=\"lessons__lesson-link\">${course.name}</a>\n                            </li>\n                        `\n                          )\n                          .join(\"\")}\n                    </ul>\n                `;\n        coursesSection.appendChild(sectionElement);\n      }\n    });\n  };\n\n  const userProfile = JSON.parse(localStorage.getItem(\"userProfile\")) || {};\n  const profileData = await fetchProfileData();\n\n  updateProfileButton();\n\n  if (userProfile.courses && userProfile.courses.length > 0) {\n    renderCourseSections(userProfile.courses);\n  } else if (profileData.courses && profileData.courses.length > 0) {\n    renderCourseSections(profileData.courses);\n  }\n});\n"],"names":["document","addEventListener","profileCircle","getElementById","coursesSection","fetchProfileData","response","fetch","ok","Error","json","error","console","renderCourseSections","courses","innerHTML","sections","name","id","forEach","section","sectionCourses","filter","course","length","sectionElement","createElement","map","link","join","appendChild","userProfile","JSON","parse","localStorage","getItem","profileData","updateProfileButton","user","textContent","toUpperCase","style","display"],"version":3,"file":"lessons.fe3c8167.js.map"}