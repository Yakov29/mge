{"mappings":"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","sources":["<anon>","src/index.js","src/js/home.js","src/js/sponsors.js","src/js/profile/profileSystem.js","src/js/profile/addProfile.js","src/js/reviews/reviewsSystem.js"],"sourcesContent":["const $212038711ef1a1fe$var$registerButton = document.querySelector(\".regButton\");\nconst $212038711ef1a1fe$var$registerModal = document.querySelector(\".register__modal\");\nconst $212038711ef1a1fe$var$loginButton = document.querySelector(\".logButton\");\nconst $212038711ef1a1fe$var$loginModal = document.querySelector(\".login__modal\");\nconst $212038711ef1a1fe$var$cross = document.querySelector(\".cross__svg\");\nconst $212038711ef1a1fe$var$cross2 = document.querySelector(\".cross__svg2\");\nconsole.log($212038711ef1a1fe$var$registerButton);\nconsole.log(\"test\");\n$212038711ef1a1fe$var$registerButton.addEventListener(\"click\", (e)=>{\n    $212038711ef1a1fe$var$registerModal.classList.remove(\"change__invisible\");\n    $212038711ef1a1fe$var$loginModal.classList.add(\"change__invisible\");\n});\n$212038711ef1a1fe$var$loginButton.addEventListener(\"click\", (e)=>{\n    $212038711ef1a1fe$var$loginModal.classList.remove(\"change__invisible\");\n    $212038711ef1a1fe$var$registerModal.classList.add(\"change__invisible\");\n});\n$212038711ef1a1fe$var$cross.addEventListener(\"click\", ()=>{\n    $212038711ef1a1fe$var$loginModal.classList.add(\"change__invisible\");\n    $212038711ef1a1fe$var$registerModal.classList.add(\"change__invisible\");\n    console.log(123);\n});\n$212038711ef1a1fe$var$cross2.addEventListener(\"click\", ()=>{\n    $212038711ef1a1fe$var$loginModal.classList.add(\"change__invisible\");\n    $212038711ef1a1fe$var$registerModal.classList.add(\"change__invisible\");\n    console.log(123);\n});\n\n\n// const slides = document.querySelectorAll('.slides');\n// const next = document.getElementById(\"next\");\n// const previous = document.getElementById('previous');\n// const dotsContainer = document.getElementById('dotsContainer');\n// console.log(next)\n// console.log(previous)\n// let currentIndex = 0;\n// slides.forEach((_, index) => {\n//     const dot = document.createElement('div');\n//     dot.classList.add('dot');\n//     if (index === currentIndex) dot.classList.add('active');\n//     dotsContainer.appendChild(dot);\n// });\n// function updateSlides() {\n//     const slideWidth = document.getElementById('window').clientWidth;\n//     document.getElementById('slide-container').style.transform = `translateX(${-slideWidth * currentIndex}px)`;\n//     document.querySelectorAll('.dot').forEach((dot, index) => {\n//         dot.classList.toggle('active', index === currentIndex);\n//     });\n// }\n// next.addEventListener('click', () => {\n//     currentIndex = (currentIndex + 1) % slides.length;\n//     updateSlides();\n// });\n// previous.addEventListener('click', () => {\n//     currentIndex = (currentIndex - 1 + slides.length) % slides.length;\n//     updateSlides();\n// });\n// dotsContainer.addEventListener('click', (event) => {\n//     if (event.target.classList.contains('dot')) {\n//         currentIndex = Array.from(dotsContainer.children).indexOf(event.target);\n//         updateSlides();\n//     }\n// });\n// window.addEventListener('resize', updateSlides);\n// updateSlides();\n\n\nconst $b13e113f41dde6f0$var$baseURL = \"https://669a78899ba098ed61ffc5a3.mockapi.io/accounts\";\nconst $b13e113f41dde6f0$export$32da561ec87acb84 = async (profile)=>{\n    try {\n        const response = await fetch($b13e113f41dde6f0$var$baseURL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(profile)\n        });\n        if (!response.ok) throw new Error(\"Network response was not ok\");\n        return await response.json();\n    } catch (error) {\n        throw new Error(`Registration failed: ${error.message}`);\n    }\n};\nconst $b13e113f41dde6f0$export$585c1c8d79d3e628 = async ()=>{\n    try {\n        const response = await fetch($b13e113f41dde6f0$var$baseURL);\n        if (!response.ok) throw new Error(\"Network response was not ok\");\n        return await response.json();\n    } catch (error) {\n        throw new Error(`Failed to fetch profiles: ${error.message}`);\n    }\n};\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const profileCircle = document.querySelector(\".profile__circle\");\n    const regButton = document.querySelector(\".regButton\");\n    const logButton = document.querySelector(\".logButton\");\n    const logoutButton = document.querySelector(\"#logout-button\");\n    const registerForm = document.querySelector(\".register__form\");\n    const loginForm = document.querySelector(\".login__form\");\n    const loginErrorMessage = loginForm ? loginForm.querySelector(\".error-message\") : null;\n    const registerErrorMessage = registerForm ? registerForm.querySelector(\".error-message\") : null;\n    const registerModal = document.querySelector(\".register__modal\");\n    const loginModal = document.querySelector(\".login__modal\");\n    const tryButton = document.querySelector(\".tryButton\");\n    const updateUI = ()=>{\n        const userProfile = localStorage.getItem(\"userProfile\");\n        if (profileCircle) {\n            if (userProfile) {\n                profileCircle.classList.remove(\"change__invisible\");\n                if (logoutButton) logoutButton.classList.remove(\"change__invisible\");\n                if (regButton) regButton.classList.add(\"change__invisible\");\n                if (logButton) logButton.classList.add(\"change__invisible\");\n                const user = JSON.parse(userProfile);\n                profileCircle.textContent = user.name[0].toUpperCase();\n            } else {\n                profileCircle.classList.add(\"change__invisible\");\n                if (logoutButton) logoutButton.classList.add(\"change__invisible\");\n                if (regButton) regButton.classList.remove(\"change__invisible\");\n                if (logButton) logButton.classList.remove(\"change__invisible\");\n            }\n        }\n    };\n    updateUI();\n    if (registerForm) registerForm.addEventListener(\"submit\", async (e)=>{\n        e.preventDefault();\n        if (registerErrorMessage) registerErrorMessage.textContent = \"\";\n        const profilename = e.target.elements.profilename.value;\n        const profilesurname = e.target.elements.profilesurname.value;\n        const profilelogin = e.target.elements.profilelogin.value;\n        const profilepassword = e.target.elements.profilepassword.value;\n        if (!profilename || !profilesurname || !profilelogin || !profilepassword) {\n            if (registerErrorMessage) registerErrorMessage.textContent = \"Please fill in all fields\";\n            return;\n        }\n        const profile = {\n            name: profilename,\n            surname: profilesurname,\n            login: profilelogin,\n            password: profilepassword\n        };\n        try {\n            console.log(\"Registering profile:\", profile); // Debugging statement\n            await (0, $b13e113f41dde6f0$export$32da561ec87acb84)(profile);\n            localStorage.setItem(\"userProfile\", JSON.stringify(profile));\n            updateUI();\n            if (registerModal) registerModal.classList.add(\"change__invisible\");\n        } catch (error) {\n            if (registerErrorMessage) registerErrorMessage.textContent = \"Registration failed. Please try again.\";\n            console.error(\"Registration failed:\", error);\n        }\n    });\n    if (loginForm) loginForm.addEventListener(\"submit\", async (e)=>{\n        e.preventDefault();\n        if (loginErrorMessage) loginErrorMessage.textContent = \"\";\n        const profilelogin = e.target.elements.profilelogin.value;\n        const profilepassword = e.target.elements.profilepassword.value;\n        if (!profilelogin || !profilepassword) {\n            if (loginErrorMessage) loginErrorMessage.textContent = \"Please fill in all fields\";\n            return;\n        }\n        try {\n            console.log(\"Logging in with:\", profilelogin); // Debugging statement\n            const profiles = await (0, $b13e113f41dde6f0$export$585c1c8d79d3e628)();\n            const user = profiles.find((profile)=>profile.login === profilelogin && profile.password === profilepassword);\n            if (user) {\n                localStorage.setItem(\"userProfile\", JSON.stringify(user));\n                updateUI();\n                if (loginModal) loginModal.classList.add(\"change__invisible\");\n            } else if (loginErrorMessage) loginErrorMessage.textContent = \"Invalid login or password. Please try again.\";\n        } catch (error) {\n            if (loginErrorMessage) loginErrorMessage.textContent = \"Login failed. Please try again.\";\n            console.error(\"Login failed:\", error);\n        }\n    });\n    if (logoutButton) logoutButton.addEventListener(\"click\", ()=>{\n        localStorage.removeItem(\"userProfile\");\n        updateUI();\n    });\n    if (regButton) regButton.addEventListener(\"click\", ()=>{\n        if (registerModal) registerModal.classList.remove(\"change__invisible\");\n    });\n    if (logButton) logButton.addEventListener(\"click\", ()=>{\n        if (loginModal) loginModal.classList.remove(\"change__invisible\");\n    });\n    if (tryButton) tryButton.addEventListener(\"click\", ()=>{\n        if (registerModal) registerModal.classList.remove(\"change__invisible\");\n    });\n});\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const reviewsContainer = document.getElementById(\"reviews-container\");\n    const reviewForm = document.getElementById(\"review-form\");\n    const reviewNameInput = document.getElementById(\"review-name\");\n    const reviewTextInput = document.getElementById(\"review-text\");\n    const reviewRatingContainer = document.getElementById(\"review-rating\");\n    const submitButton = document.getElementById(\"submit-button\");\n    const userProfile = JSON.parse(localStorage.getItem(\"userProfile\")) || {};\n    let selectedRating = 0;\n    const getReviews = async ()=>{\n        try {\n            const response = await fetch(\"https://669b6b40276e45187d3569df.mockapi.io/reviews\");\n            if (!response.ok) throw new Error(\"Network response was not ok\");\n            const reviews = await response.json();\n            reviewsContainer.innerHTML = reviews.map((review)=>`\r\n                <div class=\"review\">\r\n                    <div class=\"review__avatar\">${review.name[0].toUpperCase()}</div>\r\n                    <div class=\"review__content\">\r\n                        <p class=\"review__name\">${review.name}</p>\r\n                        <p class=\"review__text\">${review.text}</p>\r\n                        <p class=\"review__rating\">\\u{420}\\u{435}\\u{439}\\u{442}\\u{438}\\u{43D}\\u{433}: ${\"\\u2605\".repeat(review.rating)}</p>\r\n                    </div>\r\n                </div>\r\n            `).join(\"\");\n        } catch (error) {\n            console.error(\"Failed to fetch reviews:\", error);\n        }\n    };\n    const addReview = async (name, text, rating)=>{\n        try {\n            const response = await fetch(\"https://669b6b40276e45187d3569df.mockapi.io/reviews\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    name: name,\n                    text: text,\n                    rating: rating\n                })\n            });\n            if (!response.ok) throw new Error(\"Network response was not ok\");\n            getReviews(); // Refresh the reviews list\n        } catch (error) {\n            console.error(\"Failed to add review:\", error);\n        }\n    };\n    const userHasReviewed = async (name)=>{\n        try {\n            const response = await fetch(\"https://669b6b40276e45187d3569df.mockapi.io/reviews\");\n            if (!response.ok) throw new Error(\"Network response was not ok\");\n            const reviews = await response.json();\n            return reviews.some((review)=>review.name === name);\n        } catch (error) {\n            console.error(\"Failed to check user reviews:\", error);\n            return false;\n        }\n    };\n    const updateStarRating = (rating)=>{\n        const stars = document.querySelectorAll(\".star\");\n        stars.forEach((star)=>{\n            star.classList.toggle(\"selected\", star.dataset.value <= rating);\n        });\n    };\n    reviewRatingContainer.addEventListener(\"click\", (e)=>{\n        if (e.target.classList.contains(\"star\")) {\n            selectedRating = parseInt(e.target.dataset.value, 10);\n            updateStarRating(selectedRating);\n        }\n    });\n    const updateFormState = ()=>{\n        if (userProfile.name) {\n            reviewNameInput.value = userProfile.name;\n            reviewNameInput.readOnly = true;\n            reviewTextInput.disabled = false;\n            submitButton.disabled = false;\n        } else {\n            reviewNameInput.value = \"\";\n            reviewNameInput.readOnly = true;\n            reviewTextInput.disabled = true;\n            submitButton.disabled = true;\n        }\n    };\n    reviewForm.addEventListener(\"submit\", async (e)=>{\n        e.preventDefault();\n        const name = reviewNameInput.value;\n        const text = reviewTextInput.value;\n        if (name && text && selectedRating > 0) {\n            if (await userHasReviewed(name)) alert(\"\\u0412\\u0438 \\u0432\\u0436\\u0435 \\u0437\\u0430\\u043B\\u0438\\u0448\\u0430\\u043B\\u0438 \\u0432\\u0456\\u0434\\u0433\\u0443\\u043A.\");\n            else {\n                addReview(name, text, selectedRating);\n                reviewTextInput.value = \"\";\n                selectedRating = 0;\n                updateStarRating(selectedRating);\n            }\n        }\n    });\n    getReviews();\n    updateFormState();\n});\n\n\n\n\n//# sourceMappingURL=index.d152bc83.js.map\n","import \"./js/home.js\";\r\nimport \"./js/sponsors.js\";\r\nimport \"./js/profile/profileSystem.js\";\r\nimport \"./js/profile/addProfile.js\";\r\nimport \"./js/reviews/reviewsSystem.js\";","const registerButton = document.querySelector(\".regButton\");\r\nconst registerModal = document.querySelector(\".register__modal\");\r\nconst loginButton = document.querySelector(\".logButton\")\r\nconst loginModal = document.querySelector(\".login__modal\")\r\nconst cross = document.querySelector(\".cross__svg\")\r\nconst cross2 = document.querySelector(\".cross__svg2\")\r\n\r\nconsole.log(registerButton);\r\nconsole.log(\"test\");\r\n\r\nregisterButton.addEventListener(\"click\", (e) => {\r\n    registerModal.classList.remove(\"change__invisible\");\r\n    loginModal.classList.add(\"change__invisible\");\r\n});\r\n\r\n\r\nloginButton.addEventListener(\"click\", (e) => {\r\n    loginModal.classList.remove(\"change__invisible\");\r\n    registerModal.classList.add(\"change__invisible\");\r\n});\r\n\r\ncross.addEventListener(\"click\" , () => {\r\n    loginModal.classList.add(\"change__invisible\");\r\n    registerModal.classList.add(\"change__invisible\");\r\n    console.log(123)\r\n})\r\ncross2.addEventListener(\"click\" , () => {\r\n    loginModal.classList.add(\"change__invisible\");\r\n    registerModal.classList.add(\"change__invisible\");\r\n    console.log(123)\r\n})\r\n\r\n","// const slides = document.querySelectorAll('.slides');\r\n// const next = document.getElementById(\"next\");\r\n// const previous = document.getElementById('previous');\r\n// const dotsContainer = document.getElementById('dotsContainer');\r\n// console.log(next)\r\n// console.log(previous)\r\n// let currentIndex = 0;\r\n\r\n// slides.forEach((_, index) => {\r\n//     const dot = document.createElement('div');\r\n//     dot.classList.add('dot');\r\n//     if (index === currentIndex) dot.classList.add('active');\r\n//     dotsContainer.appendChild(dot);\r\n// });\r\n\r\n// function updateSlides() {\r\n//     const slideWidth = document.getElementById('window').clientWidth;\r\n//     document.getElementById('slide-container').style.transform = `translateX(${-slideWidth * currentIndex}px)`;\r\n    \r\n//     document.querySelectorAll('.dot').forEach((dot, index) => {\r\n//         dot.classList.toggle('active', index === currentIndex);\r\n//     });\r\n// }\r\n\r\n// next.addEventListener('click', () => {\r\n//     currentIndex = (currentIndex + 1) % slides.length;\r\n//     updateSlides();\r\n// });\r\n\r\n// previous.addEventListener('click', () => {\r\n//     currentIndex = (currentIndex - 1 + slides.length) % slides.length;\r\n//     updateSlides();\r\n// });\r\n\r\n// dotsContainer.addEventListener('click', (event) => {\r\n//     if (event.target.classList.contains('dot')) {\r\n//         currentIndex = Array.from(dotsContainer.children).indexOf(event.target);\r\n//         updateSlides();\r\n//     }\r\n// });\r\n\r\n// window.addEventListener('resize', updateSlides);\r\n\r\n// updateSlides();","const baseURL = 'https://669a78899ba098ed61ffc5a3.mockapi.io/accounts';\r\n\r\nexport const addProfile = async (profile) => {\r\n    try {\r\n        const response = await fetch(baseURL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(profile)\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        throw new Error(`Registration failed: ${error.message}`);\r\n    }\r\n};\r\n\r\nexport const getProfiles = async () => {\r\n    try {\r\n        const response = await fetch(baseURL);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        throw new Error(`Failed to fetch profiles: ${error.message}`);\r\n    }\r\n};\r\n","import { addProfile, getProfiles } from \"./profileSystem.js\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const profileCircle = document.querySelector(\".profile__circle\");\r\n    const regButton = document.querySelector(\".regButton\");\r\n    const logButton = document.querySelector(\".logButton\");\r\n    const logoutButton = document.querySelector(\"#logout-button\");\r\n    const registerForm = document.querySelector(\".register__form\");\r\n    const loginForm = document.querySelector(\".login__form\");\r\n    const loginErrorMessage = loginForm ? loginForm.querySelector('.error-message') : null;\r\n    const registerErrorMessage = registerForm ? registerForm.querySelector('.error-message') : null;\r\n    const registerModal = document.querySelector(\".register__modal\");\r\n    const loginModal = document.querySelector(\".login__modal\");\r\n    const tryButton = document.querySelector(\".tryButton\");\r\n\r\n    const updateUI = () => {\r\n        const userProfile = localStorage.getItem(\"userProfile\");\r\n\r\n        if (profileCircle) {\r\n            if (userProfile) {\r\n                profileCircle.classList.remove(\"change__invisible\");\r\n                if (logoutButton) logoutButton.classList.remove(\"change__invisible\");\r\n                if (regButton) regButton.classList.add(\"change__invisible\");\r\n                if (logButton) logButton.classList.add(\"change__invisible\");\r\n\r\n                const user = JSON.parse(userProfile);\r\n                profileCircle.textContent = user.name[0].toUpperCase();\r\n            } else {\r\n                profileCircle.classList.add(\"change__invisible\");\r\n                if (logoutButton) logoutButton.classList.add(\"change__invisible\");\r\n                if (regButton) regButton.classList.remove(\"change__invisible\");\r\n                if (logButton) logButton.classList.remove(\"change__invisible\");\r\n            }\r\n        }\r\n    };\r\n\r\n    updateUI();\r\n\r\n    if (registerForm) {\r\n        registerForm.addEventListener(\"submit\", async (e) => {\r\n            e.preventDefault();\r\n            if (registerErrorMessage) registerErrorMessage.textContent = '';\r\n\r\n            const profilename = e.target.elements.profilename.value;\r\n            const profilesurname = e.target.elements.profilesurname.value;\r\n            const profilelogin = e.target.elements.profilelogin.value;\r\n            const profilepassword = e.target.elements.profilepassword.value;\r\n\r\n            if (!profilename || !profilesurname || !profilelogin || !profilepassword) {\r\n                if (registerErrorMessage) registerErrorMessage.textContent = 'Please fill in all fields';\r\n                return;\r\n            }\r\n\r\n            const profile = {\r\n                name: profilename,\r\n                surname: profilesurname,\r\n                login: profilelogin,\r\n                password: profilepassword\r\n            };\r\n\r\n            try {\r\n                console.log(\"Registering profile:\", profile); // Debugging statement\r\n                await addProfile(profile);\r\n                localStorage.setItem(\"userProfile\", JSON.stringify(profile));\r\n                updateUI();\r\n                if (registerModal) registerModal.classList.add(\"change__invisible\");\r\n            } catch (error) {\r\n                if (registerErrorMessage) registerErrorMessage.textContent = 'Registration failed. Please try again.';\r\n                console.error(\"Registration failed:\", error);\r\n            }\r\n        });\r\n    }\r\n\r\n    if (loginForm) {\r\n        loginForm.addEventListener(\"submit\", async (e) => {\r\n            e.preventDefault();\r\n            if (loginErrorMessage) loginErrorMessage.textContent = '';\r\n\r\n            const profilelogin = e.target.elements.profilelogin.value;\r\n            const profilepassword = e.target.elements.profilepassword.value;\r\n\r\n            if (!profilelogin || !profilepassword) {\r\n                if (loginErrorMessage) loginErrorMessage.textContent = 'Please fill in all fields';\r\n                return;\r\n            }\r\n\r\n            try {\r\n                console.log(\"Logging in with:\", profilelogin); // Debugging statement\r\n                const profiles = await getProfiles();\r\n                const user = profiles.find(profile => profile.login === profilelogin && profile.password === profilepassword);\r\n\r\n                if (user) {\r\n                    localStorage.setItem(\"userProfile\", JSON.stringify(user));\r\n                    updateUI();\r\n                    if (loginModal) loginModal.classList.add(\"change__invisible\");\r\n                } else {\r\n                    if (loginErrorMessage) loginErrorMessage.textContent = 'Invalid login or password. Please try again.';\r\n                }\r\n            } catch (error) {\r\n                if (loginErrorMessage) loginErrorMessage.textContent = 'Login failed. Please try again.';\r\n                console.error(\"Login failed:\", error);\r\n            }\r\n        });\r\n    }\r\n\r\n    if (logoutButton) {\r\n        logoutButton.addEventListener(\"click\", () => {\r\n            localStorage.removeItem(\"userProfile\");\r\n            updateUI();\r\n        });\r\n    }\r\n\r\n    if (regButton) {\r\n        regButton.addEventListener(\"click\", () => {\r\n            if (registerModal) registerModal.classList.remove(\"change__invisible\");\r\n        });\r\n    }\r\n\r\n    if (logButton) {\r\n        logButton.addEventListener(\"click\", () => {\r\n            if (loginModal) loginModal.classList.remove(\"change__invisible\");\r\n        });\r\n    }\r\n\r\n    if (tryButton) {\r\n        tryButton.addEventListener(\"click\", () => {\r\n            if (registerModal) registerModal.classList.remove(\"change__invisible\");\r\n        });\r\n    }\r\n});\r\n","document.addEventListener(\"DOMContentLoaded\", () => {\r\n    const reviewsContainer = document.getElementById(\"reviews-container\");\r\n    const reviewForm = document.getElementById(\"review-form\");\r\n    const reviewNameInput = document.getElementById(\"review-name\");\r\n    const reviewTextInput = document.getElementById(\"review-text\");\r\n    const reviewRatingContainer = document.getElementById(\"review-rating\");\r\n    const submitButton = document.getElementById(\"submit-button\");\r\n    const userProfile = JSON.parse(localStorage.getItem(\"userProfile\")) || {};\r\n\r\n    let selectedRating = 0;\r\n\r\n    const getReviews = async () => {\r\n        try {\r\n            const response = await fetch(\"https://669b6b40276e45187d3569df.mockapi.io/reviews\");\r\n            if (!response.ok) throw new Error(\"Network response was not ok\");\r\n            const reviews = await response.json();\r\n            reviewsContainer.innerHTML = reviews.map(review => `\r\n                <div class=\"review\">\r\n                    <div class=\"review__avatar\">${review.name[0].toUpperCase()}</div>\r\n                    <div class=\"review__content\">\r\n                        <p class=\"review__name\">${review.name}</p>\r\n                        <p class=\"review__text\">${review.text}</p>\r\n                        <p class=\"review__rating\">Рейтинг: ${\"★\".repeat(review.rating)}</p>\r\n                    </div>\r\n                </div>\r\n            `).join('');\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch reviews:\", error);\r\n        }\r\n    };\r\n\r\n    const addReview = async (name, text, rating) => {\r\n        try {\r\n            const response = await fetch(\"https://669b6b40276e45187d3569df.mockapi.io/reviews\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ name, text, rating })\r\n            });\r\n            if (!response.ok) throw new Error(\"Network response was not ok\");\r\n            getReviews(); // Refresh the reviews list\r\n        } catch (error) {\r\n            console.error(\"Failed to add review:\", error);\r\n        }\r\n    };\r\n\r\n    const userHasReviewed = async (name) => {\r\n        try {\r\n            const response = await fetch(\"https://669b6b40276e45187d3569df.mockapi.io/reviews\");\r\n            if (!response.ok) throw new Error(\"Network response was not ok\");\r\n            const reviews = await response.json();\r\n            return reviews.some(review => review.name === name);\r\n        } catch (error) {\r\n            console.error(\"Failed to check user reviews:\", error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const updateStarRating = (rating) => {\r\n        const stars = document.querySelectorAll('.star');\r\n        stars.forEach(star => {\r\n            star.classList.toggle('selected', star.dataset.value <= rating);\r\n        });\r\n    };\r\n\r\n    reviewRatingContainer.addEventListener(\"click\", (e) => {\r\n        if (e.target.classList.contains('star')) {\r\n            selectedRating = parseInt(e.target.dataset.value, 10);\r\n            updateStarRating(selectedRating);\r\n        }\r\n    });\r\n\r\n    const updateFormState = () => {\r\n        if (userProfile.name) {\r\n            reviewNameInput.value = userProfile.name;\r\n            reviewNameInput.readOnly = true;\r\n            reviewTextInput.disabled = false;\r\n            submitButton.disabled = false;\r\n        } else {\r\n            reviewNameInput.value = '';\r\n            reviewNameInput.readOnly = true;\r\n            reviewTextInput.disabled = true;\r\n            submitButton.disabled = true;\r\n        }\r\n    };\r\n\r\n    reviewForm.addEventListener(\"submit\", async (e) => {\r\n        e.preventDefault();\r\n        const name = reviewNameInput.value;\r\n        const text = reviewTextInput.value;\r\n\r\n        if (name && text && selectedRating > 0) {\r\n            if (await userHasReviewed(name)) {\r\n                alert(\"Ви вже залишали відгук.\");\r\n            } else {\r\n                addReview(name, text, selectedRating);\r\n                reviewTextInput.value = '';\r\n                selectedRating = 0;\r\n                updateStarRating(selectedRating);\r\n            }\r\n        }\r\n    });\r\n\r\n    getReviews();\r\n    updateFormState();\r\n});\r\n"],"names":["$212038711ef1a1fe$var$registerButton","document","querySelector","$212038711ef1a1fe$var$registerModal","$212038711ef1a1fe$var$loginButton","$212038711ef1a1fe$var$loginModal","$212038711ef1a1fe$var$cross","$212038711ef1a1fe$var$cross2","console","log","addEventListener","e","classList","remove","add","$b13e113f41dde6f0$var$baseURL","$b13e113f41dde6f0$export$32da561ec87acb84","profile","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","message","$b13e113f41dde6f0$export$585c1c8d79d3e628","profileCircle","regButton","logButton","logoutButton","registerForm","loginForm","loginErrorMessage","registerErrorMessage","registerModal","loginModal","tryButton","updateUI","userProfile","localStorage","getItem","user","parse","textContent","name","toUpperCase","preventDefault","profilename","target","elements","value","profilesurname","profilelogin","profilepassword","surname","login","password","setItem","profiles","find","removeItem","reviewsContainer","getElementById","reviewForm","reviewNameInput","reviewTextInput","reviewRatingContainer","submitButton","selectedRating","getReviews","reviews","innerHTML","map","review","text","repeat","rating","join","addReview","userHasReviewed","some","updateStarRating","stars","querySelectorAll","forEach","star","toggle","dataset","contains","parseInt","alert","readOnly","disabled"],"version":3,"file":"index.d152bc83.js.map"}